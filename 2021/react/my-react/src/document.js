// 函数组件和class组件的区别
// 相同点：都可以接收属性并返回react元素
// 不同点：
//     1.class组件面向对象方式编程，会构造一个实例，函数组件不需要构造实例，接收输入，返回输出，基于函数式编程
//     2.内存占用：类组件需要创建并保存实例，会占用一定内存，函数组件不需要创建实例
//     3.值捕获性：函数组件具有值捕获性特点
//     4.可测试性：函数组件更方便编写单元测试
//     5.状态：类组件有自己的实例，可以定义状态，而且可以修改状态更新组件，函数式组件以前没有状态，现在可以用useState
//     6.生命周期：类组件有自己完整的生命周期，可以在生命周期内编写逻辑；函数组件以前没有生命周期，现在可以通过useEffect模仿生命周期
//     7.逻辑复用：类组件可以通过继承实现逻辑复用，但官方推荐组合优于继承；函数式组件可以通过自定义hook实现逻辑复用
//     8.跳过更新：类组件可以通过shouldComponentUpdate和PureComponent来跳过更新，函数式组件可以通过React.memo来跳过更新
//     9.发展问题：未来函数组件将成为主流，因为它可以更好的屏蔽this问题，规范和逻辑复用，



// react 设计理念
// 跨平台渲染  => 虚拟dom
// 快速响应 => 异步可中断+增量更新


// redux Vs  mbox

// redux 基于函数式编程  单一store  store以js原生对象存储  状态通常是不可改变的   react-redux(provider和connect)
// mbox 基于面向对象编程  多个store  store以可观察对象存储  Mobx中可以直接使用新值更新状态对象  mbox-react(provider和inject)

